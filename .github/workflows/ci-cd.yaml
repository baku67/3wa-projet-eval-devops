name: Pipeline CI/CD evel

on:
  push:
    branches:
      - master

jobs:

  # CI: lancement des tests automatisés (variables d'environnement de test)
  build_et_test:
    runs-on: ubuntu-latest

    # Base de données de test (Github Actions)
    services:
      mysql:
        image: mysql:8
        env:
          MYSQL_DATABASE: dbname_test
          MYSQL_ROOT_PASSWORD: root
        ports:
          - 3306:3306
        options: >-
          --health-cmd "mysqladmin ping -h localhost"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 3

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      - name: Variables d'environnement github (.env de test)
        run: |
          echo "DB_HOST=localhost" >> $GITHUB_ENV
          echo "DB_NAME=dbname_test" >> $GITHUB_ENV
          echo "DB_USER=root" >> $GITHUB_ENV
          echo "DB_PASSWORD=root" >> $GITHUB_ENV

      - name: Install dependencies
        run: npm install

      # anciens debug dans la pipe
      # - name: DEBUG LOGS GITHUB ACTIONS
      #   run: ls -R

      - name: Créer la base et exécuter les migrations
        run: npx sequelize-cli db:migrate --env test --migrations-path app/migrations

      - name: Tests unitaires
        run: npm test


  # Partiellement fonctionnel (push sur DockerHub ok, pas de déploiement sur AWS EC2)
  deploy:
    runs-on: ubuntu-latest
    needs: build_et_test
    if: success()  # Si les test passent:
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }} # secret github (ajouté)
          password: ${{ secrets.DOCKER_PASSWORD }} # secret github (ajouté)

      - name: Build de l'image Docker
        run: docker build -t nujabb/eval-devops:latest .

      - name: Upload de l'image sur DockerHub
        run: docker push nujabb/eval-devops:latest

      ###  PARTIE NON FONCTIONNELLE  ####################################################
      # Déployer sur un serveur via SSH (AWS EC2)
      - name: Déploiement
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.EC2_HOST }} # secret github (pas ajouté)
          username: ec2-user 
          key: ${{ secrets.EC2_DEPLOY_SSH_KEY }} # secret github (pas ajouté)
          script: |
            cd /home/ec2-user/cda-eval-devops
            git pull origin main
            docker-compose up --build -d
            docker system prune -af --volumes
